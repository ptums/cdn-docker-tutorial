# /etc/nginx/nginx.conf

events { }

http {
    # ─── Moved proxy_cache_path INTO the http block ────────────────────────
    proxy_cache_path /var/cache/nginx 
                     levels=1:2 
                     keys_zone=cdn_cache:10m 
                     max_size=100m 
                     inactive=10m 
                     use_temp_path=off;

    proxy_cache_key "$scheme$request_method$host$request_uri";

    server {
        listen 80;
        server_name edge-site-eu.local;

        # Add a header to inspect cache status (HIT / MISS)
        add_header X-Cache-Status $upstream_cache_status;

        location / {
            proxy_pass http://origin:80;

            proxy_cache cdn_cache;
            proxy_cache_valid 200 302 10m;
            proxy_cache_valid 404 1m;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }


      # ── HTTPS Server with SSL/TLS ────────────────────────────────────────────
  server {
    listen 443 ssl;
    server_name edge-site-eu.local;

    # Path inside container where we’ll mount the certs
    ssl_certificate     /etc/nginx/certs/server.crt;
    ssl_certificate_key /etc/nginx/certs/server.key;

    # For local development with self‑signed cert, disable strict checks:
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    add_header Strict-Transport-Security "max-age=31536000" always;

    # Add a header to see cache status
    add_header X-Cache-Status $upstream_cache_status;

    location / {
      proxy_pass http://origin:80;
      proxy_cache cdn_cache;
      proxy_cache_valid 200 302 10m;
      proxy_cache_valid 404 1m;
      proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;

      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
  }
}